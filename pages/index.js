import Head from 'next/head'
import { useEffect, useState } from 'react';
import axios from 'axios';
import styles from '../styles/Home.module.css'

const JOB_ID_STORAGE_KEY = 'JOB_ID_STORAGE_KEY';

export default function Home() {
  const [status, setStatus] = useState();
  const [submitError, setSubmitError] = useState(null);
  const [numberValue, setNumberValue] = useState();

  useEffect(() => {
    const unfinishedJobId = localStorage.getItem(JOB_ID_STORAGE_KEY);
    if (unfinishedJobId) {
      pollJobStatus(unfinishedJobId);
    }
  }, []);

  const submitForm = () => {
    if(!numberValue || numberValue < 1) {
      setSubmitError('Number must be greater than 0');
      return;
    }

    setSubmitError(null);

    axios.post('/api/deliver', { count: numberValue })
      .then(res => {
        if (res.status == 200) {
          const {
            jobId,
            status
          } = res.data;

          setStatus(status);
          localStorage.setItem(JOB_ID_STORAGE_KEY, jobId);
          pollJobStatus(jobId);
        } else {
          console.error('error status on submit count', res.data);
          setSubmitError(res.data.message);
        }
      })
      .catch(err => {
        console.error('error on submitting count', err);
        alert('submit error');
      });
  }

  const pollJobStatus = (jobId) => {
    console.log('polling job status', jobId);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Fena Test Task</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        
        <div className={styles.description}>
          <input className={styles.numberInput}
            type={"number"} min="0"
            onInput={(e) => setNumberValue(e.target.value)} 
          />
          { submitError ?
            <span className={styles.errorSpan}>{submitError}</span>
          : null
          }
          <button className={styles.submitBtn} onClick={submitForm}>
            Submit
          </button>

          { status ?
            <div className={styles.statusBlock}>
              <span>{status} out of {numberValue}</span>
            </div>
          : null
          }
        </div>
        
      </main>

    </div>
  )
}
